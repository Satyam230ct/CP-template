
//---------------------SPARE TABLE----------------------
   //Use it for min max gcd idempotant function and rage sum problems  

struct spare_table
{
    vector<vector<int>> mat;    // 2-d matrix
    int n,m;    // size and log
    vector<int> p2;
    void init(int _n,int _m)
    {
        n=_n;   m=_m;   mat.resize(n);
        for(int i=0;i<n;i++)mat[i].resize(m);
        // Recurrence relation to cal pow-> logN= logN/2 + 1;
        p2.resize(n+1);
        p2[0]=0;
        for(int i=1;i<=n;i++)p2[i]=p2[i/2]+1;
    }
    void build(int a[])
    {
        for(int i=0;i<n;i++)mat[i][0]=a[i]; // Base Case
        for(int j=1;j<m;j++)
            for(int i=0;i+(1<<j)<=n;i++)
            mat[i][j]=min(mat[i][j-1],mat[i+(1<<(j-1))][j-1]);  // Min valuse;
    }
    int queryMin(int l,int r){
        int pw=p2[r-l]-1;
        return min(mat[l][pw],mat[r-(1<<pw)+1][pw]);
    }
};
